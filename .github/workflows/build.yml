name: Build

on:
  push:
    branches: [ main, develop ]

jobs:

  matrix: # sets the matrix
    runs-on: ubuntu-latest
    outputs:
      plugin: ${{ steps.matrix.outputs.plugin }}

    steps:
      - uses: actions/checkout@v3 # only one commit, therefore only detects updated plugins
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          dir_names: "true"

      - name: Set the plugins matrix
        id: matrix
        run: |
          directories=$(echo ${{ steps.changed-filed.outputs.all_changed_and_modified_files }} | xargs -n1 | sort -u | xargs |  sed "s# #, #g") # remove duplicate directories
          matrix=$((
            echo '{ "plugin" : ['
            separator=''
            for d in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
              [[ -d $d ]]             || continue;
              [[ $d != ".github"* ]]  || continue;
              [[ $d != *"/"* ]]       || continue;
              echo -n "$separator"\""$d"\"; separator=',';
            done
            echo "]}"
          ) | jq -c .)
          echo "plugin=$matrix" >> $GITHUB_OUTPUT

      - name: Check content of matrix
        run: echo ${{ steps.matrix.outputs.plugin }}

  build:
    if: ${{ needs.matrix.outputs.plugin != '{"plugin":[]}' }} # check if matrix is not empty
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false # continues with matrix even if an element fails
      matrix: ${{fromJson(needs.matrix.outputs.plugin)}}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get image version
        run: |
          echo "version=`jq '.version' ./${{ matrix.plugin }}/plugin.json | tr -d \"" >> $GITHUB_ENV
          #echo "version=`awk '/^##/ {{print substr($2, 1, length($2))}}' ./${{ matrix.plugin }}/CHANGELOG.md | head -n1`" >> $GITHUB_ENV

      - name: Extract branch name
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Check if Dockerfile exists
        id: check_dockerfile
        uses: andstor/file-existence-action@v2
        with:
          files: "${{ matrix.plugin }}/task/Dockerfile"

      - name: Set up QEMU
        if: ${{ steps.check_dockerfile.outputs.files_exists == 'true' }}
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: ${{ steps.check_dockerfile.outputs.files_exists == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: ${{ steps.check_dockerfile.outputs.files_exists == 'true' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub container Registry
        if: ${{ steps.check_dockerfile.outputs.files_exists == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push prod
        if: ${{ steps.check_dockerfile.outputs.files_exists == 'true' && env.branch == 'main' }}
        uses: docker/build-push-action@v3
        with:
          file: ./${{ matrix.plugin }}/task/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.plugin }}-plugin:${{ env.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.plugin }}-plugin:${{ env.branch }}

      - name: Build and push dev
        if: ${{ steps.check_dockerfile.outputs.files_exists == 'true' && env.branch == 'develop' }}
        uses: docker/build-push-action@v3
        with:
          file: ./${{ matrix.plugin }}/task/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.plugin }}-plugin:${{ env.branch }}
            #${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.plugin }}-plugin:${{ env.version }}

      - name: Tag repository
        if: ${{ env.branch == 'main' }}
        uses: mathieudutour/github-tag-action@v6
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ matrix.module }}/v${{ env.version }}
          tag_prefix: ''
