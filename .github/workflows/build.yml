name: Build

on:
  push:
    branches: [ main ]

jobs:

#  common:
#    runs-on: ubuntu-latest

#    steps:

#      - uses: actions/checkout@v3

#     TODO: action not supported yet by dockerhub with Personal Access Token
#      - name: Upload Dockerhub description
#        uses: peter-evans/dockerhub-description@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#          repository: bautisflow/toolchains

  matrix: # sets the matrix
    runs-on: ubuntu-latest
    outputs:
      plugins: ${{ steps.matrix.outputs.plugins }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1 # only one commit, therefore only detects updated plugins

      - name: Set the plugins matrix
        id: matrix
        run: |
          matrix=$((
            echo '{ "plugins" : ['
            separator=''
            for f in *; do [[ -e $f ]] || continue; echo -n "$separator"\""$f"\"; separator=','; done
            echo "]}"
          ) | jq -c .)
          echo "::set-output name=plugins::$matrix"

  build:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.plugins)}}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if Dockerfile exists
        id: check_dockerfile
        uses: andstor/file-existence-action@v1
        with:
          files: "${{ matrix.plugins }}/task/Dockerfile"

      #- name: Get changed files
      #  id: changed-files
      #  uses: tj-actions/changed-files@v20

      - name: Get image version
        if: steps.check_dockerfile.outputs.file_exists == 'true'
        run: |
          cd ${{ matrix.plugins }}
          echo "version=`awk '/^##/ {{print substr($2, 2, length($2)-2)}}' ${{ matrix.plugins }}/CHANGELOG.md | head -n1`" >> $GITHUB_ENV

      - name: Extract branch name
        if: steps.check_dockerfile.outputs.file_exists == 'true'
        id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Set up QEMU
        if: steps.check_dockerfile.outputs.file_exists == 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.check_dockerfile.outputs.file_exists == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: steps.check_dockerfile.outputs.file_exists == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub container Registry
        if: steps.check_dockerfile.outputs.file_exists == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.check_dockerfile.outputs.file_exists == 'true'
        uses: docker/build-push-action@v3
        #if: contains(steps.changed-files.outputs.modified_files, '${{ matrix.module}}.dockerfile')
        with:
          file: ./${{ matrix.plugins }}/task/Dockerfile
          build-args: |
            version=${{ env.version }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.module }}-plugin:${{ env.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.module }}-plugin:${{ steps.extract_branch.outputs.branch }}

      #- name: Tag repository
      #  uses: mathieudutour/github-tag-action@v6.0
      #  continue-on-error: true
      #  if: contains(steps.changed-files.outputs.modified_files, '${{ matrix.module}}.dockerfile')
      #  with:
      #    github_token: ${{ secrets.GITHUB_TOKEN }}
      #    custom_tag: ${{ matrix.module }}_${{ env.version }}
      #    tag_prefix: ''
